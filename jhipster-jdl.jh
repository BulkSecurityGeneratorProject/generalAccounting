
entity Currency {
code	String unique required, 
description String required }

entity CashBook {
date Instant required,
amount Double required,
transactionType TransactionType
uuid String}

entity GeneralAccount {
code	String unique required, 
description String required,
type AccountType required}

entity TrialBalance
{
    debit BigDecimal,
    credit BigDecimal
}
entity GeneralLedger{
	date Instant,
    transactionsSumDr BigDecimal,
    transactionsSumCr BigDecimal,
    balanceSumDr BigDecimal,
    balanceSumCr BigDecimal
    
}



enum AccountType {
    ASSET, LIABILITY, INCOME, EXPENDITURE, MEMORANDUM, CAPITAL
}
enum TransactionType {
    CREDIT, DEBIT
}

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 
// Set an angular suffix
// angularSuffix * with mySuffix
// defining multiple OneToMany relationships with comments
relationship OneToOne
{
TrialBalance  {trialBalance} to  GeneralAccount,
GeneralLedger{accountLedger} to GeneralAccount
 
}

relationship ManyToOne {
GeneralAccount{GeneralAccountCurrency} to Currency ,
  CashBook{TansactionCurrency} to Currency,
  CashBook {fromAccount}  to   GeneralAccount,
  CashBook {toAccount}  to   GeneralAccount
}
paginate * with pagination


